# Test cases for the Golem architecture

This is a bunch of test case scenarios for verifying various architecture-level
propositions. This is mainly for internal use by Golem architects and
developers. The scenarios described below are grouped into several categories.
The actual test scenarios can be generated by picking one test case from each
category, thus creating a cartesian product of all the category sets.

## Payment and ordering scenarios

1. Fire and forget

2. Pay and obtain contract note

3. Keep paying at fixed intervals (keep a service running)

4. Interactively respond to demands (generate offer dynamically)

5. Interactively generate offers

6. Serve only specific requestors (white- or non-black-listed-)

7. Use only specific providers (white- or non-black-listed-)

## Service architecture scenarios

1. Requestor nodes also used as application/service clients (Brass Blender case)

2. Application/service customers decoupled from requestor nodes (3rd party
service provider case)

3. Provider nodes managing cluster of multiple computers

4. Requestor nodes distributing jobs among multiple provider nodes

5. 3rd-party providers of verification services

6. 3rd-party providers of reputation services

## Threat model (security) scenarios

1. Provider claims execution, but does not run the payload properly (e.g. skips)

2. Provider executes verbatim, but injects malicious output (malformed file, or
evil service)

3. Provider executes verbatim, but observes the secrets (data, code)

4. Requestor avoids payment (despite correct handling of the activity)

5. Requestor sends payload which attempts to attack the provider
node/infrastructure
