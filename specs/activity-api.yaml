swagger: '2.0'
info:
  version: v1
  title: Golem Activity API
paths:
  /activity:
    post:
      tags:
        - Control
      summary: Creates new Activity based on given Agreement.
      operationId: CreateActivity
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: agreementId
          in: body
          description: ''
          required: false
          schema:
            type: string
      responses:
        '201':
          description: Success
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/CreateActivityError'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/CreateActivityError'
  '/activity/{activityId}/exec':
    post:
      tags:
        - Control
      summary: Executes an ExeScript batch within a given Activity.
      operationId: Exec
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: string
        - name: script
          in: body
          description: ''
          required: false
          schema:
            $ref: '#/definitions/ExeScriptBatch'
      responses:
        '200':
          description: Success
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ExecError'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ExecError'
  '/activity/{activityId}/exec/{batchId}':
    get:
      tags:
        - Control
      summary: Queries for ExeScript batch results.
      operationId: GetExecBatchResults
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: string
        - name: batchId
          in: path
          description: ''
          required: true
          type: integer
          format: int32
        - name: timeout
          in: query
          description: ''
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/ExeScriptCommandResult'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ExecError'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorBase'
    put:
      tags:
        - ProviderGateway
      summary: Pass result of individual ExeScript command executed within the batch.
      operationId: PutExeScriptResult
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: string
        - name: batchId
          in: path
          description: ''
          required: true
          type: string
        - name: commandResult
          in: body
          description: ''
          required: false
          schema:
            $ref: '#/definitions/ExeScriptCommandResult'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorBase'
  '/activity/{activityId}':
    delete:
      tags:
        - Control
      summary: Destroys given Activity.
      operationId: DestroyActivity
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/DestroyActivityError'
  /activity/events:
    get:
      tags:
        - ProviderGateway
      summary: Queries for ExeScript batch results.
      operationId: CollectActivityEvents
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: timeout
          in: query
          description: ''
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/ProviderEvent'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorBase'
  '/activity/{activityId}/state':
    get:
      tags:
        - State
      summary: Get state of specified Activity.
      operationId: GetState
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ActivityState'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorBase'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorBase'
    put:
      tags:
        - ProviderGateway
      summary: Pass activity state (which may include error details)
      operationId: PutActivityStateDetails
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: string
        - name: state
          in: body
          required: false
          schema:
            $ref: '#/definitions/ActivityStateDetails'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorBase'
  '/activity/{activityId}/usage':
    get:
      tags:
        - State
      summary: Get usage of specified Activity.
      operationId: GetCurrentUsage
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              format: double
              type: number
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorBase'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorBase'
  '/activity/{activityId}/command':
    get:
      tags:
        - State
      summary: Get running command for a specified Activity.
      operationId: GetRunningCommand
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExeScriptCommand'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorBase'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorBase'
definitions:
  CreateActivityError:
    type: object
    properties:
      message:
        type: string
  ProblemDetails:
    type: object
    properties:
      type:
        type: string
      title:
        type: string
      status:
        format: int32
        type: integer
      detail:
        type: string
      instance:
        type: string
    additionalProperties:
      type: object
  ExeScriptBatch:
    type: object
    properties:
      commands:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/ExeScriptCommand'
  ExeScriptCommand:
    type: object
    properties:
      command:
        type: string
      params:
        uniqueItems: false
        type: array
        items:
          type: string
  ExecError:
    type: object
    properties:
      message:
        type: string
  ExeScriptCommandResult:
    type: object
    properties:
      index:
        format: int32
        type: integer
      result:
        enum:
          - Ok
          - Error
        type: string
      message:
        type: string
  ErrorBase:
    type: object
    properties:
      message:
        type: string
  DestroyActivityError:
    type: object
    properties:
      message:
        type: string
  ProviderEvent:
    required:
      - eventType
    type: object
    properties:
      eventType:
        enum:
          - CreateActivity
          - Exec
          - DestroyActivity
          - GetState
        type: string
      activityId:
        type: string
    discriminator: eventType
  ActivityStateDetails:
    type: object
    properties:
      currentUsage:
        description: Current usage vector
        uniqueItems: false
        type: array
        items:
          format: double
          type: number
      state:
        enum:
          - New
          - Deploying
          - Ready
          - Starting
          - Active
          - Unresponsive
          - Terminated
        type: string
      reason:
        description: Reason for Activity termination (specified when Activity in Terminated state).
        type: string
      errorMessage:
        description: If error caused state change - error message shall be provided.
        type: string
  ActivityState:
    type: object
    properties:
      state:
        enum:
          - New
          - Deploying
          - Ready
          - Starting
          - Active
          - Unresponsive
          - Terminated
        type: string
      reason:
        description: Reason for Activity termination (specified when Activity in Terminated state).
        type: string
      errorMessage:
        description: If error caused state change - error message shall be provided.
        type: string
  CreateActivityProviderEvent:
    type: object
    allOf:
      - $ref: '#/definitions/ProviderEvent'
      - type: object
        properties:
          agreementId:
            type: string
          eventType:
            enum:
              - CreateActivity
              - Exec
              - DestroyActivity
              - GetState
            type: string
          activityId:
            type: string
    properties: {}
  ExecProviderEvent:
    type: object
    allOf:
      - $ref: '#/definitions/ProviderEvent'
      - type: object
        properties:
          batchId:
            type: string
          exeScript:
            $ref: '#/definitions/ExeScriptBatch'
          eventType:
            enum:
              - CreateActivity
              - Exec
              - DestroyActivity
              - GetState
            type: string
          activityId:
            type: string
    properties: {}
